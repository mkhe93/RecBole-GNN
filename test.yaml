# Model and Dataset
model: "ForwardGNN"
dataset: "ml-100k"
data_path: r"C:\Users\s8347434\Documents\RecBole-GNN\asset\data"

field_separator: "\t"
USER_ID_FIELD: user_id
ITEM_ID_FIELD: item_id
user_inter_num_interval: [20, 100]
load_col:
    inter: [user_id, item_id]

# Evaluation
eval_args:                      # (dict) 4 keys: group_by, order, split, and mode
  split: {'LK': ['test_only', 10]}   # (dict) The splitting strategy ranging in ['RS','LS'].{'RS':[0.8,0.1,0.1]}, valid_and_test, test_only, valid_only
  #split: { 'LS': 'test_only' }   # (dict) The splitting strategy ranging in ['RS','LS'].{'RS':[0.8,0.1,0.1]}
  #split: { 'RS':[0.7,0.1,0.2] }   # (dict) The splitting strategy ranging in ['RS','LS'].{'RS':[0.8,0.1,0.1]}
  group_by: user                # (str) The grouping strategy ranging in ['user', 'none'].
  order: RO                     # (str) The ordering strategy ranging in ['RO', 'TO'].
  mode: full

# permanent
shuffle: False
layer_evaluation: False
num_threads: 24
eval_batch_size: 2048           # (int) The training batch size.
train_batch_size: 4096          # (int) The training batch size.
learner: adam                   # (str) The name of used optimizer.
save_step: 2
train_stage: "pretrain"
show_progress: True
valid_metric: "ndcg@10"
eval_step: 5

# tuning parameters
embedding_size: 128
lgcn_dim: 128
n_layers: 2
reg_weight: 1e-05               # (float) The L2 regularization weight.
learning_rate: 0.01             # (float) Learning rate.
theta: 2.0
gnn_type: 'GCN'
forward_learning_type: 'FL-BPR'
pretrain_epochs: 20

# for finetuning aggregation layer
epochs: 2

#train_neg_sample_args: ~

train_neg_sample_args:          # (dict) Negative sampling configuration for model training.
  distribution: uniform         # (str) The distribution of negative items.
  sample_num: 1                 # (int) The sampled num of negative items.
  alpha: 1.0                    # (float) The power of sampling probability for popularity distribution.
  dynamic: False                # (bool) Whether to use dynamic negative sampling.
  candidate_num: 1              # (int) The number of candidate negative items when dynamic negative sampling.

# k: 90